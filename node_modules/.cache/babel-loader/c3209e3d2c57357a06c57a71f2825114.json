{"ast":null,"code":"var _jsxFileName = \"/app/src/components/BlogList.jsx\",\n    _s = $RefreshSig$();\n\nimport BlogPost from \"./BlogPost\";\nimport Pagination from \"./Pagination\";\nimport React, { useState } from \"react\";\nimport blogs from \"../data/blogs.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PAGE_SIZES = [15, 25, 50, 100];\n\nfunction BlogList() {\n  _s();\n\n  const [currentPage, setCurrentPage] = useState(1);\n  const [currentPaginationData, setCurrentPaginationData] = useState(blogs.posts.slice(0, 15));\n  const [pageSize, setPageSize] = useState(100);\n  const maxPage = Math.ceil(blogs.posts.length / pageSize);\n\n  const handlePageChange = step => {\n    setCurrentPage(prev => {\n      let res = prev + step;\n      if (res < 1) return 1;else if (res > maxPage) return maxPage;else return res;\n    });\n  };\n\n  const handlePageSize = size => {\n    setPageSize(size);\n  };\n\n  const updateRowsPerPage = pageSize => {};\n\n  const updatePage = page => {\n    setCurrentPage(page);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Pagination, {\n      totalCount: blogs.posts.length,\n      pageSizeOptions: PAGE_SIZES,\n      onPageChange: updatePage,\n      onPageSizeOptionChange: updateRowsPerPage,\n      currentPage,\n      handlePageChange,\n      pageSize,\n      handlePageSize\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      // Do not modify the aria-label below, it is used for Hatchways automation.\n      \"aria-label\": \"blog list\",\n      children: currentPaginationData.map(blog => /*#__PURE__*/_jsxDEV(BlogPost, {\n        author: blog.author,\n        title: blog.title,\n        excerpt: blog.excerpt,\n        featureImage: blog.image\n      }, blog.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n\n_s(BlogList, \"reA1Hz4a0c0M1SxVA3EziYMtRD0=\");\n\n_c = BlogList;\nexport default BlogList;\n\nvar _c;\n\n$RefreshReg$(_c, \"BlogList\");","map":{"version":3,"names":["BlogPost","Pagination","React","useState","blogs","PAGE_SIZES","BlogList","currentPage","setCurrentPage","currentPaginationData","setCurrentPaginationData","posts","slice","pageSize","setPageSize","maxPage","Math","ceil","length","handlePageChange","step","prev","res","handlePageSize","size","updateRowsPerPage","updatePage","page","map","blog","author","title","excerpt","image","id"],"sources":["/app/src/components/BlogList.jsx"],"sourcesContent":["import BlogPost from \"./BlogPost\";\nimport Pagination from \"./Pagination\";\nimport React, {useState} from \"react\";\nimport blogs from \"../data/blogs.json\";\n\nconst PAGE_SIZES = [15, 25, 50, 100];\n\nfunction BlogList() {\n  const [currentPage, setCurrentPage] = useState(1);\n  const [currentPaginationData, setCurrentPaginationData] = useState(blogs.posts.slice(0, 15));\n  const [pageSize, setPageSize] = useState(100);\n\n  const maxPage = Math.ceil(blogs.posts.length/pageSize)\n\n  const handlePageChange = (step) => {\n    setCurrentPage(prev => {\n      let res = prev + step;\n      if( (res) < 1) return 1\n      else if( (res) > maxPage) return maxPage\n      else return res\n    });\n  }\n\n  const handlePageSize = (size) => {\n    setPageSize(size);\n  }\n\n  const updateRowsPerPage = (pageSize) => {\n\n  };\n  const updatePage = (page) => {\n    setCurrentPage(page);\n  };\n\n  return (\n    <div>\n      <Pagination\n        \n\n        totalCount={blogs.posts.length}\n        \n        pageSizeOptions={PAGE_SIZES}\n        onPageChange={updatePage}\n        onPageSizeOptionChange={updateRowsPerPage}\n\n        {...{currentPage, handlePageChange, pageSize, handlePageSize}}\n      />\n      <ul\n        // Do not modify the aria-label below, it is used for Hatchways automation.\n        aria-label=\"blog list\"\n      >\n        {currentPaginationData.map((blog) => (\n          <BlogPost\n            key={blog.id}\n            author={blog.author}\n            title={blog.title}\n            excerpt={blog.excerpt}\n            featureImage={blog.image}\n          />\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default BlogList;\n"],"mappings":";;;AAAA,OAAOA,QAAP,MAAqB,YAArB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AAEA,MAAMC,UAAU,GAAG,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,GAAb,CAAnB;;AAEA,SAASC,QAAT,GAAoB;EAAA;;EAClB,MAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCL,QAAQ,CAAC,CAAD,CAA9C;EACA,MAAM,CAACM,qBAAD,EAAwBC,wBAAxB,IAAoDP,QAAQ,CAACC,KAAK,CAACO,KAAN,CAAYC,KAAZ,CAAkB,CAAlB,EAAqB,EAArB,CAAD,CAAlE;EACA,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAC,GAAD,CAAxC;EAEA,MAAMY,OAAO,GAAGC,IAAI,CAACC,IAAL,CAAUb,KAAK,CAACO,KAAN,CAAYO,MAAZ,GAAmBL,QAA7B,CAAhB;;EAEA,MAAMM,gBAAgB,GAAIC,IAAD,IAAU;IACjCZ,cAAc,CAACa,IAAI,IAAI;MACrB,IAAIC,GAAG,GAAGD,IAAI,GAAGD,IAAjB;MACA,IAAKE,GAAD,GAAQ,CAAZ,EAAe,OAAO,CAAP,CAAf,KACK,IAAKA,GAAD,GAAQP,OAAZ,EAAqB,OAAOA,OAAP,CAArB,KACA,OAAOO,GAAP;IACN,CALa,CAAd;EAMD,CAPD;;EASA,MAAMC,cAAc,GAAIC,IAAD,IAAU;IAC/BV,WAAW,CAACU,IAAD,CAAX;EACD,CAFD;;EAIA,MAAMC,iBAAiB,GAAIZ,QAAD,IAAc,CAEvC,CAFD;;EAGA,MAAMa,UAAU,GAAIC,IAAD,IAAU;IAC3BnB,cAAc,CAACmB,IAAD,CAAd;EACD,CAFD;;EAIA,oBACE;IAAA,wBACE,QAAC,UAAD;MAGE,UAAU,EAAEvB,KAAK,CAACO,KAAN,CAAYO,MAH1B;MAKE,eAAe,EAAEb,UALnB;MAME,YAAY,EAAEqB,UANhB;MAOE,sBAAsB,EAAED,iBAP1B;MASOlB,WATP;MASoBY,gBATpB;MASsCN,QATtC;MASgDU;IAThD;MAAA;MAAA;MAAA;IAAA,QADF,eAYE;MACE;MACA,cAAW,WAFb;MAAA,UAIGd,qBAAqB,CAACmB,GAAtB,CAA2BC,IAAD,iBACzB,QAAC,QAAD;QAEE,MAAM,EAAEA,IAAI,CAACC,MAFf;QAGE,KAAK,EAAED,IAAI,CAACE,KAHd;QAIE,OAAO,EAAEF,IAAI,CAACG,OAJhB;QAKE,YAAY,EAAEH,IAAI,CAACI;MALrB,GACOJ,IAAI,CAACK,EADZ;QAAA;QAAA;QAAA;MAAA,QADD;IAJH;MAAA;MAAA;MAAA;IAAA,QAZF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AA6BD;;GAxDQ5B,Q;;KAAAA,Q;AA0DT,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}