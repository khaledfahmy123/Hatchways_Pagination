{"ast":null,"code":"var _jsxFileName = \"/app/src/components/BlogList.jsx\",\n    _s = $RefreshSig$();\n\nimport BlogPost from \"./BlogPost\";\nimport Pagination from \"./Pagination\";\nimport React, { useState } from \"react\";\nimport blogs from \"../data/blogs.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PAGE_SIZES = [15, 25, 50, 100];\n\nfunction BlogList() {\n  _s();\n\n  const posts = blogs.posts;\n  const [currentPage, setCurrentPage] = useState(1);\n  const [pageSize, setPageSize] = useState(100);\n  const [currentPaginationData, setCurrentPaginationData] = useState(posts.slice(0, pageSize));\n  const maxPage = Math.ceil(blogs.posts.length / pageSize);\n\n  const handlePageChange = step => {\n    setCurrentPage(prev => {\n      let res = prev + step;\n      if (res < 1) return 1;else if (res > maxPage) return maxPage;else return res;\n    });\n    let contentIndex = currentPage - 1;\n    let startSlice = contentIndex * pageSize;\n    let endSlice = (contentIndex + 1) * pageSize;\n    setCurrentPaginationData(posts.slice(startSlice, (contentIndex + 1) * pageSize));\n  };\n\n  const updateRowsPerPage = size => {\n    setCurrentPage(1);\n    setPageSize(size);\n    let contentIndex = 0;\n    setCurrentPaginationData(posts.slice(contentIndex * pageSize, 1 * pageSize));\n  };\n\n  const updatePage = page => {\n    setCurrentPage(page);\n    let contentIndex = page - 1;\n    setCurrentPaginationData(posts.slice(contentIndex * pageSize, 1 * pageSize));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Pagination, {\n      totalCount: blogs.posts.length,\n      pageSizeOptions: PAGE_SIZES,\n      onPageChange: updatePage,\n      onPageSizeOptionChange: updateRowsPerPage,\n      currentPage,\n      handlePageChange,\n      pageSize,\n      maxPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      // Do not modify the aria-label below, it is used for Hatchways automation.\n      \"aria-label\": \"blog list\",\n      children: currentPaginationData.map(blog => /*#__PURE__*/_jsxDEV(BlogPost, {\n        author: blog.author,\n        title: blog.title,\n        excerpt: blog.excerpt,\n        featureImage: blog.image\n      }, blog.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n\n_s(BlogList, \"Ym/MvDLRUWJUUOEdpgKjnRm4ZWg=\");\n\n_c = BlogList;\nexport default BlogList;\n\nvar _c;\n\n$RefreshReg$(_c, \"BlogList\");","map":{"version":3,"names":["BlogPost","Pagination","React","useState","blogs","PAGE_SIZES","BlogList","posts","currentPage","setCurrentPage","pageSize","setPageSize","currentPaginationData","setCurrentPaginationData","slice","maxPage","Math","ceil","length","handlePageChange","step","prev","res","contentIndex","startSlice","endSlice","updateRowsPerPage","size","updatePage","page","map","blog","author","title","excerpt","image","id"],"sources":["/app/src/components/BlogList.jsx"],"sourcesContent":["import BlogPost from \"./BlogPost\";\nimport Pagination from \"./Pagination\";\nimport React, {useState} from \"react\";\nimport blogs from \"../data/blogs.json\";\n\nconst PAGE_SIZES = [15, 25, 50, 100];\n\nfunction BlogList() {\n  const posts = blogs.posts;\n  const [currentPage, setCurrentPage] = useState(1);\n  const [pageSize, setPageSize] = useState(100);\n  const [currentPaginationData, setCurrentPaginationData] = useState(posts.slice(0, pageSize));\n\n  const maxPage = Math.ceil(blogs.posts.length/pageSize)\n\n\n  const handlePageChange = (step) => {\n    setCurrentPage(prev => {\n      let res = prev + step;\n      if( res < 1) return 1\n      else if( res > maxPage) return maxPage\n      else return res\n    });\n\n    let contentIndex= (currentPage - 1);\n    let startSlice = contentIndex * pageSize;\n    let endSlice = (contentIndex + 1) * pageSize;\n    setCurrentPaginationData(posts.slice(startSlice, (contentIndex + 1) * pageSize));\n  }\n\n\n  const updateRowsPerPage = (size) => {\n    setCurrentPage(1);\n    setPageSize(size);\n\n    let contentIndex= (0);\n    setCurrentPaginationData(posts.slice(contentIndex * pageSize, (1) * pageSize));\n\n  };\n  const updatePage = (page) => {\n    setCurrentPage(page);\n\n    let contentIndex= (page - 1);\n    setCurrentPaginationData(posts.slice(contentIndex * pageSize, (1) * pageSize));\n  };\n\n  return (\n    <div>\n      <Pagination\n        \n\n        totalCount={blogs.posts.length}\n        \n        pageSizeOptions={PAGE_SIZES}\n        onPageChange={updatePage}\n        onPageSizeOptionChange={updateRowsPerPage}\n\n        {...{currentPage, handlePageChange, pageSize, maxPage}}\n      />\n      <ul\n        // Do not modify the aria-label below, it is used for Hatchways automation.\n        aria-label=\"blog list\"\n      >\n        {currentPaginationData.map((blog) => (\n          <BlogPost\n            key={blog.id}\n            author={blog.author}\n            title={blog.title}\n            excerpt={blog.excerpt}\n            featureImage={blog.image}\n          />\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default BlogList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}