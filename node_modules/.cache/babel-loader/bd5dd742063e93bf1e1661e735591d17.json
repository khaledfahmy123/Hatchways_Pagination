{"ast":null,"code":"var _jsxFileName = \"/app/src/components/Pagination.jsx\",\n    _s = $RefreshSig$();\n\nimport \"../css/pagination.scss\";\nimport { ChevronLeftIcon, ChevronRightIcon } from \"@heroicons/react/outline\";\nimport usePagination, { DOTS } from \"../hooks/usePagination\";\nimport PropTypes from \"prop-types\";\nimport React, { useState } from \"react\";\nimport { nanoid } from \"nanoid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Pagination(_ref) {\n  _s();\n\n  let {\n    onPageChange,\n    handlePageChange,\n    onPageSizeOptionChange,\n    totalCount,\n    currentPage,\n    pageSize,\n    maxPage,\n    pageSizeOptions\n  } = _ref;\n  const paginationRange = usePagination({\n    currentPage,\n    maxPage\n  });\n\n  const onNext = () => {\n    handlePageChange(1);\n  };\n\n  const onPrevious = () => {\n    handlePageChange(-1);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: \"wrapper\" // Do not modify the aria-label below, it is used for Hatchways automation.\n    ,\n    \"aria-label\": \"Blog post pagination list\",\n    children: [/*#__PURE__*/_jsxDEV(\"li\", {\n      className: \"paginationItem\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"arrowButton left\" // Do not modify the aria-label below, it is used for Hatchways automation.\n        ,\n        \"aria-label\": \"Goto previous page\",\n        onClick: onPrevious,\n        disabled: false // change this line to disable a button.\n        ,\n        children: /*#__PURE__*/_jsxDEV(ChevronLeftIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), paginationRange.map(pageNumber => {\n      const key = nanoid();\n\n      if (pageNumber === DOTS) {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"dots\",\n          children: \"\\u2026\"\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this);\n      }\n\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"paginationItem\",\n        \"aria-current\": \"false\" // change this line to highlight a current page.\n        ,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\" // Do not modify the aria-label below, it is used for Hatchways automation.\n          ,\n          \"aria-label\": `Goto page ${pageNumber}`,\n          onClick: () => onPageChange(pageNumber),\n          children: pageNumber\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this)\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"li\", {\n      className: \"paginationItem\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"arrowButton right\" // Do not modify the aria-label below, it is used for Hatchways automation.\n        ,\n        \"aria-label\": \"Goto next page\",\n        onClick: onNext,\n        disabled: false // change this line to disable a button.\n        ,\n        children: /*#__PURE__*/_jsxDEV(ChevronRightIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      className: \"paginationSelector\" // Do not modify the aria-label below, it is used for Hatchways automation.\n      ,\n      \"aria-label\": \"Select page size\",\n      value: pageSize,\n      onChange: e => {\n        onPageSizeOptionChange(e.target.value);\n      },\n      children: pageSizeOptions.map(size => /*#__PURE__*/_jsxDEV(\"option\", {\n        defaultValue: pageSize === size,\n        value: size,\n        children: [size, \" per page\"]\n      }, size, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Pagination, \"19HqfiXoIUMweeBbakf/FHNBwW4=\", false, function () {\n  return [usePagination];\n});\n\n_c = Pagination;\nPagination.propTypes = {\n  totalCount: PropTypes.number,\n  currentPage: PropTypes.number,\n  pageSize: PropTypes.number,\n  pageSizeOptions: PropTypes.instanceOf(Array),\n  onPageChange: PropTypes.func,\n  onPageSizeOptionChange: PropTypes.func\n};\nPagination.defaultProps = {\n  totalCount: 0,\n  currentPage: 1,\n  pageSize: 1,\n  pageSizeOptions: [15, 25, 50, 100],\n  onPageChange: () => {},\n  onPageSizeOptionChange: () => {}\n};\nexport default Pagination;\n\nvar _c;\n\n$RefreshReg$(_c, \"Pagination\");","map":{"version":3,"names":["ChevronLeftIcon","ChevronRightIcon","usePagination","DOTS","PropTypes","React","useState","nanoid","Pagination","onPageChange","handlePageChange","onPageSizeOptionChange","totalCount","currentPage","pageSize","maxPage","pageSizeOptions","paginationRange","onNext","onPrevious","map","pageNumber","key","e","target","value","size","propTypes","number","instanceOf","Array","func","defaultProps"],"sources":["/app/src/components/Pagination.jsx"],"sourcesContent":["import \"../css/pagination.scss\";\n\nimport { ChevronLeftIcon, ChevronRightIcon } from \"@heroicons/react/outline\";\nimport usePagination, { DOTS } from \"../hooks/usePagination\";\n\nimport PropTypes from \"prop-types\";\nimport React, {useState} from \"react\";\nimport { nanoid } from \"nanoid\";\n\nfunction Pagination({\n  onPageChange,\n  handlePageChange,\n  \n  onPageSizeOptionChange,\n  totalCount,\n  currentPage,\n\n  pageSize,\n  maxPage,\n\n  pageSizeOptions,\n}) {\n  \n  const paginationRange = usePagination({\n    currentPage,\n    maxPage,\n  });\n\n\n  const onNext = () => {\n    handlePageChange(1);\n  };\n\n  const onPrevious = () => {\n    handlePageChange(-1);\n  };\n\n\n\n  return (\n    <ul\n      className=\"wrapper\"\n      // Do not modify the aria-label below, it is used for Hatchways automation.\n      aria-label=\"Blog post pagination list\"\n    >\n      <li className=\"paginationItem\">\n        <button\n          type=\"button\"\n          className=\"arrowButton left\"\n          // Do not modify the aria-label below, it is used for Hatchways automation.\n          aria-label=\"Goto previous page\"\n          onClick={onPrevious}\n          disabled={false} // change this line to disable a button.\n        >\n          <ChevronLeftIcon />\n        </button>\n      </li>\n\n      {paginationRange.map((pageNumber) => {\n        const key = nanoid();\n\n        if (pageNumber === DOTS) {\n          return (\n            <li key={key} className=\"dots\">\n              &#8230;\n            </li>\n          );\n        }\n\n        return (\n          <li\n            key={key}\n            className=\"paginationItem\"\n            aria-current=\"false\" // change this line to highlight a current page.\n          >\n            <button\n              type=\"button\"\n              // Do not modify the aria-label below, it is used for Hatchways automation.\n              aria-label={`Goto page ${pageNumber}`}\n              onClick={() => onPageChange(pageNumber)}\n            >\n              {pageNumber}\n            </button>\n          </li>\n        );\n      })}\n\n      <li className=\"paginationItem\">\n        <button\n          type=\"button\"\n          className=\"arrowButton right\"\n          // Do not modify the aria-label below, it is used for Hatchways automation.\n          aria-label=\"Goto next page\"\n          onClick={onNext}\n          disabled={false} // change this line to disable a button.\n        >\n          <ChevronRightIcon />\n        </button>\n      </li>\n\n      <select\n        className=\"paginationSelector\"\n        // Do not modify the aria-label below, it is used for Hatchways automation.\n        aria-label=\"Select page size\"\n        value={pageSize}\n        onChange={(e) => {\n          onPageSizeOptionChange(e.target.value);\n        }}\n      >\n        {pageSizeOptions.map((size) => (\n          <option key={size} defaultValue={pageSize === size} value={size}>\n            {size} per page\n          </option>\n        ))}\n      </select>\n    </ul>\n  );\n}\n\nPagination.propTypes = {\n  totalCount: PropTypes.number,\n  currentPage: PropTypes.number,\n  pageSize: PropTypes.number,\n  pageSizeOptions: PropTypes.instanceOf(Array),\n  onPageChange: PropTypes.func,\n  onPageSizeOptionChange: PropTypes.func,\n};\n\nPagination.defaultProps = {\n  totalCount: 0,\n  currentPage: 1,\n  pageSize: 1,\n  pageSizeOptions: [15, 25, 50, 100],\n  onPageChange: () => {},\n  onPageSizeOptionChange: () => {},\n};\n\nexport default Pagination;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}