{"ast":null,"code":"import { useState } from \"react\";\nexport const DOTS = \"...\";\n\nfunction usePagination(props) {\n  // const [currentPage, setCurrentPage] = useState(props.currentPage);\n  // const [pageSize, setPageSize] = useState(props.pageSize);\n  let temp = [];\n  let maxPage = Math.ceil(props.totalCount / pageSize);\n  let min = currentPage == maxPage && maxPage != 1 ? maxPage - 2 : Math.max(1, currentPage - 1);\n  let max = Math.min(min + 2, maxPage);\n\n  for (var i = min; i <= max; i++) temp.push(i);\n\n  if (temp[0] > 1) {\n    temp.unshift(1, DOTS);\n  }\n\n  if (temp.at(-1) < maxPage) {\n    temp.push(DOTS, maxPage);\n  } // const handleActivePage = (step=0, size=pageSize) => {\n  //   setCurrentPage(prev => {\n  //     let res = prev + step;\n  //     if( (res) < 1) return 1\n  //     else if( (res) > maxPage) return maxPage\n  //     else return res\n  //   });\n  //   setPageSize(size);\n  // }\n\n\n  console.log(currentPage);\n  return [temp, handleActivePage];\n}\n\nexport default usePagination;","map":{"version":3,"names":["useState","DOTS","usePagination","props","temp","maxPage","Math","ceil","totalCount","pageSize","min","currentPage","max","i","push","unshift","at","console","log","handleActivePage"],"sources":["/app/src/hooks/usePagination.js"],"sourcesContent":["import { useState } from \"react\";\n\nexport const DOTS = \"...\";\n\nfunction usePagination(props) {\n  \n  // const [currentPage, setCurrentPage] = useState(props.currentPage);\n  // const [pageSize, setPageSize] = useState(props.pageSize);\n  \n  let temp = [];\n\n  let maxPage = Math.ceil(props.totalCount/pageSize);\n\n  let min = (currentPage == maxPage && maxPage != 1) ? maxPage -2 : Math.max(1, currentPage-1);\n  let max = Math.min(min+2, maxPage);\n  for(var i = min; i <= max; i++) temp.push(i)\n  \n  if(temp[0] > 1){\n    temp.unshift(1, DOTS);\n  }\n  if(temp.at(-1) < maxPage){\n    temp.push(DOTS, maxPage);\n  }\n\n  // const handleActivePage = (step=0, size=pageSize) => {\n  //   setCurrentPage(prev => {\n  //     let res = prev + step;\n  //     if( (res) < 1) return 1\n  //     else if( (res) > maxPage) return maxPage\n  //     else return res\n  //   });\n\n  //   setPageSize(size);\n  // }\n\n  console.log(currentPage);\n\n  return [temp, handleActivePage];\n}\n\nexport default usePagination;\n"],"mappings":"AAAA,SAASA,QAAT,QAAyB,OAAzB;AAEA,OAAO,MAAMC,IAAI,GAAG,KAAb;;AAEP,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;EAE5B;EACA;EAEA,IAAIC,IAAI,GAAG,EAAX;EAEA,IAAIC,OAAO,GAAGC,IAAI,CAACC,IAAL,CAAUJ,KAAK,CAACK,UAAN,GAAiBC,QAA3B,CAAd;EAEA,IAAIC,GAAG,GAAIC,WAAW,IAAIN,OAAf,IAA0BA,OAAO,IAAI,CAAtC,GAA2CA,OAAO,GAAE,CAApD,GAAwDC,IAAI,CAACM,GAAL,CAAS,CAAT,EAAYD,WAAW,GAAC,CAAxB,CAAlE;EACA,IAAIC,GAAG,GAAGN,IAAI,CAACI,GAAL,CAASA,GAAG,GAAC,CAAb,EAAgBL,OAAhB,CAAV;;EACA,KAAI,IAAIQ,CAAC,GAAGH,GAAZ,EAAiBG,CAAC,IAAID,GAAtB,EAA2BC,CAAC,EAA5B,EAAgCT,IAAI,CAACU,IAAL,CAAUD,CAAV;;EAEhC,IAAGT,IAAI,CAAC,CAAD,CAAJ,GAAU,CAAb,EAAe;IACbA,IAAI,CAACW,OAAL,CAAa,CAAb,EAAgBd,IAAhB;EACD;;EACD,IAAGG,IAAI,CAACY,EAAL,CAAQ,CAAC,CAAT,IAAcX,OAAjB,EAAyB;IACvBD,IAAI,CAACU,IAAL,CAAUb,IAAV,EAAgBI,OAAhB;EACD,CAlB2B,CAoB5B;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;;;EAEAY,OAAO,CAACC,GAAR,CAAYP,WAAZ;EAEA,OAAO,CAACP,IAAD,EAAOe,gBAAP,CAAP;AACD;;AAED,eAAejB,aAAf"},"metadata":{},"sourceType":"module"}