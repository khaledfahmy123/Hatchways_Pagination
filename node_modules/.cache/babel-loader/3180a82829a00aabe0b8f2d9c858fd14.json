{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nexport const DOTS = \"...\";\n\nfunction usePagination(props) {\n  _s();\n\n  const [currentPage, setCurrentPage] = useState(props.currentPage);\n  const [pageSize, setPageSize] = useState(props.pageSize);\n  let temp = [];\n  let maxPage = Math.ceil(props.totalCount / pageSize);\n  let min = activePage == maxPage && maxPage != 1 ? maxPage - 2 : Math.max(1, currentPage - 1);\n  let max = Math.min(min + 2, maxPage);\n\n  for (var i = min; i <= max; i++) temp.push(i);\n\n  if (temp[0] > 1) {\n    temp.unshift(1, DOTS);\n  }\n\n  if (temp.at(-1) < maxPage) {\n    temp.push(DOTS, maxPage);\n  }\n\n  const handleActivePage = step => {\n    setActivePage(prev => {\n      let res = prev + step;\n      if (res < 1) return 1;else if (res > maxPage) return maxPage;else return res;\n    });\n    setPageSize();\n  };\n\n  console.log(activePage);\n  return [temp, handleActivePage];\n}\n\n_s(usePagination, \"goz0u6de8QiWYV2IvtfduQoEM/w=\");\n\nexport default usePagination;","map":{"version":3,"names":["useState","DOTS","usePagination","props","currentPage","setCurrentPage","pageSize","setPageSize","temp","maxPage","Math","ceil","totalCount","min","activePage","max","i","push","unshift","at","handleActivePage","step","setActivePage","prev","res","console","log"],"sources":["/app/src/hooks/usePagination.js"],"sourcesContent":["import { useState } from \"react\";\n\nexport const DOTS = \"...\";\n\nfunction usePagination(props) {\n  \n  const [currentPage, setCurrentPage] = useState(props.currentPage);\n  const [pageSize, setPageSize] = useState(props.pageSize);\n  \n  let temp = [];\n\n  let maxPage = Math.ceil(props.totalCount/pageSize);\n\n  let min = (activePage == maxPage && maxPage != 1) ? maxPage -2 : Math.max(1, currentPage-1);\n  let max = Math.min(min+2, maxPage);\n  for(var i = min; i <= max; i++) temp.push(i)\n  \n  if(temp[0] > 1){\n    temp.unshift(1, DOTS);\n  }\n  if(temp.at(-1) < maxPage){\n    temp.push(DOTS, maxPage);\n  }\n\n  const handleActivePage = (step, ) => {\n    setActivePage(prev => {\n      let res = prev + step;\n      if( (res) < 1) return 1\n      else if( (res) > maxPage) return maxPage\n      else return res\n    });\n\n    setPageSize();\n  }\n\n  console.log(activePage);\n\n  return [temp, handleActivePage];\n}\n\nexport default usePagination;\n"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;AAEA,OAAO,MAAMC,IAAI,GAAG,KAAb;;AAEP,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;EAAA;;EAE5B,MAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCL,QAAQ,CAACG,KAAK,CAACC,WAAP,CAA9C;EACA,MAAM,CAACE,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAACG,KAAK,CAACG,QAAP,CAAxC;EAEA,IAAIE,IAAI,GAAG,EAAX;EAEA,IAAIC,OAAO,GAAGC,IAAI,CAACC,IAAL,CAAUR,KAAK,CAACS,UAAN,GAAiBN,QAA3B,CAAd;EAEA,IAAIO,GAAG,GAAIC,UAAU,IAAIL,OAAd,IAAyBA,OAAO,IAAI,CAArC,GAA0CA,OAAO,GAAE,CAAnD,GAAuDC,IAAI,CAACK,GAAL,CAAS,CAAT,EAAYX,WAAW,GAAC,CAAxB,CAAjE;EACA,IAAIW,GAAG,GAAGL,IAAI,CAACG,GAAL,CAASA,GAAG,GAAC,CAAb,EAAgBJ,OAAhB,CAAV;;EACA,KAAI,IAAIO,CAAC,GAAGH,GAAZ,EAAiBG,CAAC,IAAID,GAAtB,EAA2BC,CAAC,EAA5B,EAAgCR,IAAI,CAACS,IAAL,CAAUD,CAAV;;EAEhC,IAAGR,IAAI,CAAC,CAAD,CAAJ,GAAU,CAAb,EAAe;IACbA,IAAI,CAACU,OAAL,CAAa,CAAb,EAAgBjB,IAAhB;EACD;;EACD,IAAGO,IAAI,CAACW,EAAL,CAAQ,CAAC,CAAT,IAAcV,OAAjB,EAAyB;IACvBD,IAAI,CAACS,IAAL,CAAUhB,IAAV,EAAgBQ,OAAhB;EACD;;EAED,MAAMW,gBAAgB,GAAIC,IAAD,IAAY;IACnCC,aAAa,CAACC,IAAI,IAAI;MACpB,IAAIC,GAAG,GAAGD,IAAI,GAAGF,IAAjB;MACA,IAAKG,GAAD,GAAQ,CAAZ,EAAe,OAAO,CAAP,CAAf,KACK,IAAKA,GAAD,GAAQf,OAAZ,EAAqB,OAAOA,OAAP,CAArB,KACA,OAAOe,GAAP;IACN,CALY,CAAb;IAOAjB,WAAW;EACZ,CATD;;EAWAkB,OAAO,CAACC,GAAR,CAAYZ,UAAZ;EAEA,OAAO,CAACN,IAAD,EAAOY,gBAAP,CAAP;AACD;;GAlCQlB,a;;AAoCT,eAAeA,aAAf"},"metadata":{},"sourceType":"module"}